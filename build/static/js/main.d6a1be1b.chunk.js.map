{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__","picture","document","getElementById","header","instructor","innerHTML","require","setBackend","faceapi","image","cameraControl","display","getElementsByTagName","camera","window","navigator","mozCameras","getListOfCameras","options","pictureOptions","pictureSize","fileFormat","onError","error","console","warn","showPreview","release","getCamera","then","cameraObj","mozSrcObject","play","randExpression","reqExpression","Math","floor","random","setLatestDescriptor","myStorage","descriptor","setItem","getItem","Promise","all","nets","faceRecognitionNet","loadFromUri","faceLandmark68TinyNet","faceExpressionNet","tinyFaceDetector","localStorage","log","addEventListener","onPictureTaken","blob","blobURL","URL","createObjectURL","newImage","Image","src","setTimeout","alert","detection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","dtn","data","JSON","stringify","location","reload","_unused","onPictureNotTaken","capabilities","pictureSizes","fileformat","fileFormats","takePicture","result","descriptions","descriptorArray","parse","x","push","floatArray","Float32Array","from","labeledFaceDescriptors","LabeledFaceDescriptors","faceMatcher","FaceMatcher","labeledLatestDescriptors","latest","getLatestDescriptors","forEach","element","latestFaceMatcher","withFaceExpressions","sorted","expressions","asSortedArray","expression","probability","findBestMatch","distance","latestResult","lastestDistance","_unused2","authenticate"],"mappings":"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","file":"static/js/main.d6a1be1b.chunk.js","sourcesContent":["// import l10n.js first\nimport 'kaios-gaia-l10n';\nimport './index.css';\n\nconst picture = document.getElementById('picture');\nconst header = document.getElementById('headertext');\nconst instructor = document.getElementById('instructortext');\n\ninstructor.innerHTML = \"Loading\";\n\nconst tf = require('@tensorflow/tfjs')\ntf.setBackend('cpu')\nconst faceapi = require('@vladmandic/face-api/dist/face-api.node-cpu.js')\n\nvar image = null\nvar cameraControl = null\nvar display = document.getElementsByTagName('video')[0]\nvar camera = window.navigator.mozCameras.getListOfCameras()[1]\nvar options = {}\nvar pictureOptions = {\n  pictureSize: null,\n  fileFormat: null\n}\n\nfunction onError(error) {\n  console.warn(error);\n}\n\nfunction showPreview() {\n  if (cameraControl != null) {\n    cameraControl.release()\n  }\n\n  function onPrevSuccess(cameraObj) {\n    cameraControl = cameraObj.camera\n    display.mozSrcObject = cameraControl\n    display.play()\n  }\n  \n  navigator.mozCameras.getCamera(camera, options).then(onPrevSuccess, onError);\n}\n\nPromise.all([\n  faceapi.nets.faceRecognitionNet.loadFromUri('./models'),\n  faceapi.nets.faceLandmark68TinyNet.loadFromUri('./models'),\n  faceapi.nets.faceExpressionNet.loadFromUri('./models'),\n  faceapi.nets.tinyFaceDetector.loadFromUri('./models')\n]).then(start);\n\nfunction start() {\n  var myStorage = window.localStorage\n  if (myStorage.getItem('descriptor') == null) {\n    enrol()\n  } else {\n    authenticate()\n  }\n}\n\nfunction enrol() {\n\n  header.innerHTML = \"Enrol\";\n  console.log('Ready')\n\n  showPreview()\n  instructor.innerHTML = \"Take Picture\";\n\n  picture.addEventListener('click', () => {\n\n    instructor.innerHTML = \"Hold\";\n\n    function onPictureTaken(blob) {\n      instructor.innerHTML = \"Working\";\n      console.log(blob)\n      var blobURL = URL.createObjectURL(blob)\n      var newImage = new Image()\n      newImage.src = blobURL\n      image = newImage\n  \n      console.log('Image loaded')\n      console.log(image)\n  \n      try {\n        setTimeout(function () {\n          alert('Face not detected.\\nTry again.')\n          instructor.innerHTML = \"Take Picture\"\n          showPreview()\n          // throw console.log(\"timeout\")\n        }, 90000)\n\n        var detection = faceapi.detectSingleFace(image, new faceapi.TinyFaceDetectorOptions())\n        .withFaceLandmarks(true).withFaceDescriptor()\n    \n        detection.then((dtn) => {\n\n          console.log(dtn.descriptor)\n\n          var data = JSON.stringify(dtn.descriptor)\n          console.log('saving...')\n          var myStorage = window.localStorage\n          setLatestDescriptor(myStorage, data)\n          myStorage.setItem('descriptor', data)\n    \n          instructor.innerHTML = \"Done\";\n    \n          window.location.reload()\n        });\n      } catch {\n        alert('Face not detected.\\nTry again.')\n        instructor.innerHTML = \"Take Picture\"\n        showPreview()\n      }\n    }\n\n    function onPictureNotTaken(error) {\n      instructor.innerHTML = \"Camera Error\";\n    }\n  \n    function onPicSuccess(cameraObj) {\n      cameraControl = cameraObj.camera\n      pictureOptions.pictureSize = cameraControl.capabilities.pictureSizes[0]\n      pictureOptions.fileformat  = cameraControl.capabilities.fileFormats[0]\n  \n      cameraControl.takePicture(pictureOptions).then(onPictureTaken, onPictureNotTaken)\n    }\n\n    cameraControl.release()\n    navigator.mozCameras.getCamera(camera, options).then(onPicSuccess, onError);\n  })\n}\n\nfunction authenticate() {\n\n  header.innerHTML = \"Authenticate\";\n  \n  var myStorage = window.localStorage\n  var result = myStorage.getItem('descriptor')\n  var descriptions = []\n  var descriptorArray = JSON.parse(result)\n  for (let x in descriptorArray) {\n    descriptions.push(descriptorArray[x])\n  }\n  var floatArray = Float32Array.from(descriptions)\n  descriptions = []\n  descriptions.push(floatArray)\n\n  var labeledFaceDescriptors =  new faceapi.LabeledFaceDescriptors('john', descriptions)\n  const faceMatcher = new faceapi.FaceMatcher(labeledFaceDescriptors, 0.4)\n\n  var labeledLatestDescriptors = []\n  var latest = getLatestDescriptors(myStorage)\n  console.log(latest)\n  latest.forEach(element => {\n    console.log(element)\n    descriptions = []\n    descriptorArray = JSON.parse(element)\n    for (let x in descriptorArray) {\n      descriptions.push(descriptorArray[x])\n    }\n    floatArray = Float32Array.from(descriptions)\n    descriptions = []\n    descriptions.push(floatArray)\n    console.log(descriptions)\n    labeledLatestDescriptors.push(new faceapi.LabeledFaceDescriptors('', descriptions))\n  })\n  const latestFaceMatcher = new faceapi.FaceMatcher(labeledLatestDescriptors, 0.1)\n\n  var reqExpression = randExpression()\n  console.log('Loaded')\n\n  showPreview()\n  // instructor.innerHTML = \"Take Picture\";\n\n  picture.addEventListener('click', () => {\n\n    instructor.innerHTML = \"Hold\";\n\n    function onPictureTaken(blob) {\n      instructor.innerHTML = \"Working\";\n      var blobURL = URL.createObjectURL(blob)\n      var newImage = new Image()\n      newImage.src = blobURL\n      image = newImage\n  \n      console.log('Image loaded')\n      console.log(image)\n  \n      try{\n        setTimeout(function () {\n          alert('Face not detected.\\nTry again.')\n          window.location.reload()\n        }, 90000)\n\n        var detection = faceapi.detectSingleFace(image, new faceapi.TinyFaceDetectorOptions())\n        .withFaceLandmarks(true).withFaceExpressions().withFaceDescriptor()\n\n        detection.then((dtn) => {\n\n          console.log(dtn.descriptor)\n          const minConfidence = 0.4\n          var sorted = dtn.expressions.asSortedArray()\n\n          console.log(sorted[0].expression)\n\n          if (sorted[0].probability >= minConfidence && sorted[0].expression === reqExpression)\n          {\n            const result = faceMatcher.findBestMatch(dtn.descriptor)\n            const distance = result['distance']\n\n            const latestResult = latestFaceMatcher.findBestMatch(dtn.descriptor)\n            const lastestDistance = latestResult['distance']\n            if (distance <= 0.4 && distance >= 0.1 && lastestDistance >= 0.1)\n            {\n              alert('User Verified')\n              var data = JSON.stringify(dtn.descriptor)\n              setLatestDescriptor(myStorage, data)\n            } \n            else\n            {\n              alert('Verification failed. \\nTry again.')\n              reqExpression = randExpression()\n              window.location.reload()\n            }\n          }\n          else \n          {\n            alert('Liveness Test Failed. \\nTry again')\n            reqExpression = randExpression()\n            window.location.reload()\n          }\n        });\n      } catch {\n        alert('Face not detected.\\nTry again.')\n        instructor.innerHTML = \"Take Picture\"\n        showPreview()\n      }\n    }\n\n    function onPictureNotTaken(error) {\n      instructor.innerHTML = \"Camera Error\";\n    }\n  \n    function onPicSuccess(cameraObj) {\n      cameraControl = cameraObj.camera\n      pictureOptions.pictureSize = cameraControl.capabilities.pictureSizes[0]\n      pictureOptions.fileformat  = cameraControl.capabilities.fileFormats[0]\n  \n      cameraControl.takePicture(pictureOptions).then(onPictureTaken, onPictureNotTaken)\n    }\n\n    cameraControl.release()\n    navigator.mozCameras.getCamera(camera, options).then(onPicSuccess, onError);\n  })\n}\n\nfunction randExpression() {\n  const expressionArray = ['neutral', 'happy', 'sad', 'angry', 'surprised'];\n  var rand = Math.floor(Math.random() * 5)\n  var reqExpression = expressionArray[rand]\n  instructor.innerHTML = \"Show \" + reqExpression + \" expression\";\n  return reqExpression\n}\n\nfunction getLatestDescriptors(myStorage) {\n  var latest = []\n\n  if (myStorage.getItem('saved1') != null) {\n    latest.push(myStorage.getItem('saved1'))\n  } else if (myStorage.getItem('saved2') != null) {\n    latest.push(myStorage.getItem('saved2'))\n  } else if (myStorage.getItem('saved3') != null) {\n    latest.push(myStorage.getItem('saved3'))\n  } else if (myStorage.getItem('saved4') != null) {\n    latest.push(myStorage.getItem('saved4'))\n  } else if (myStorage.getItem('saved5') != null) {\n    latest.push(myStorage.getItem('saved5'))\n  }\n  \n  return latest\n}\n\nfunction setLatestDescriptor(myStorage, descriptor) {\n  myStorage.setItem('saved5', myStorage.getItem('saved4'))\n  myStorage.setItem('saved4', myStorage.getItem('saved3'))\n  myStorage.setItem('saved3', myStorage.getItem('saved2'))\n  myStorage.setItem('saved2', myStorage.getItem('saved1'))\n  myStorage.setItem('saved1', descriptor)\n}"],"sourceRoot":""}